{"ast":null,"code":"var _jsxFileName = \"/Users/eshaantripathi/Documents/GitHub/STUCO-Attendance/src/ScanQRCode.jsx\",\n  _s = $RefreshSig$();\n// src/ScanQRCode.jsx\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport QrReader from 'modern-react-qr-reader';\nimport { auth, db } from './firebase';\nimport { doc, getDoc, updateDoc } from 'firebase/firestore';\nimport './AdminInterface.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScanQRCode = () => {\n  _s();\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  // Redirect away if not logged in\n  useEffect(() => {\n    if (!auth.currentUser) {\n      navigate('/');\n    }\n  }, [navigate]);\n  const handleResult = async result => {\n    if (!result) return;\n    const sessionId = typeof result === 'string' ? result : (result === null || result === void 0 ? void 0 : result.text) || '';\n    // verify session exists and is open\n    const sessSnap = await getDoc(doc(db, 'attendanceSessions', sessionId));\n    if (!sessSnap.exists() || !sessSnap.data().open) {\n      setError('No active session with that code.');\n      return;\n    }\n    // mark current user present\n    const email = auth.currentUser.email;\n    const username = email.split('@')[0];\n    const userRef = doc(db, 'users', username);\n    const userSnap = await getDoc(userRef);\n    const existing = userSnap.exists() ? userSnap.data().attendance || [] : [];\n    if (!existing.includes(sessionId)) {\n      await updateDoc(userRef, {\n        attendance: [...existing, sessionId]\n      });\n    }\n    navigate('/dashboard');\n  };\n  const handleError = err => {\n    console.error(err);\n    setError('Error accessing camera: ' + (err.message || err.toString()));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"admin-btn\",\n      style: {\n        marginBottom: '1rem'\n      },\n      onClick: () => navigate(-1),\n      children: \"\\u2190 Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"admin-title\",\n      children: \"Scan QR Code to Check In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      style: {\n        marginBottom: '1rem'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"qr-container\",\n      style: {\n        maxWidth: 400,\n        margin: '0 auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(QrReader, {\n        constraints: {\n          video: {\n            facingMode: 'environment'\n          }\n        },\n        onResult: (res, err) => {\n          if (res) handleResult(res);\n          if (err) handleError(err);\n        },\n        style: {\n          width: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(ScanQRCode, \"vfTDrq04+XWAcK/v1uBZBP2N3Is=\", false, function () {\n  return [useNavigate];\n});\n_c = ScanQRCode;\nexport default ScanQRCode;\nvar _c;\n$RefreshReg$(_c, \"ScanQRCode\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","QrReader","auth","db","doc","getDoc","updateDoc","jsxDEV","_jsxDEV","ScanQRCode","_s","error","setError","navigate","currentUser","handleResult","result","sessionId","text","sessSnap","exists","data","open","email","username","split","userRef","userSnap","existing","attendance","includes","handleError","err","console","message","toString","className","children","style","marginBottom","onClick","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","margin","constraints","video","facingMode","onResult","res","width","_c","$RefreshReg$"],"sources":["/Users/eshaantripathi/Documents/GitHub/STUCO-Attendance/src/ScanQRCode.jsx"],"sourcesContent":["// src/ScanQRCode.jsx\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport QrReader from 'modern-react-qr-reader';\nimport { auth, db } from './firebase';\nimport { doc, getDoc, updateDoc } from 'firebase/firestore';\nimport './AdminInterface.css';\n\nconst ScanQRCode = () => {\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  // Redirect away if not logged in\n  useEffect(() => {\n    if (!auth.currentUser) {\n      navigate('/');\n    }\n  }, [navigate]);\n\n  const handleResult = async (result) => {\n    if (!result) return;\n    const sessionId = typeof result === 'string' ? result : result?.text || '';\n    // verify session exists and is open\n    const sessSnap = await getDoc(doc(db, 'attendanceSessions', sessionId));\n    if (!sessSnap.exists() || !sessSnap.data().open) {\n      setError('No active session with that code.');\n      return;\n    }\n    // mark current user present\n    const email = auth.currentUser.email;\n    const username = email.split('@')[0];\n    const userRef = doc(db, 'users', username);\n    const userSnap = await getDoc(userRef);\n    const existing = userSnap.exists() ? (userSnap.data().attendance || []) : [];\n    if (!existing.includes(sessionId)) {\n      await updateDoc(userRef, { attendance: [...existing, sessionId] });\n    }\n    navigate('/dashboard');\n  };\n\n  const handleError = (err) => {\n    console.error(err);\n    setError('Error accessing camera: ' + (err.message || err.toString()));\n  };\n\n  return (\n    <div className=\"admin-container\">\n      <button\n        className=\"admin-btn\"\n        style={{ marginBottom: '1rem' }}\n        onClick={() => navigate(-1)}\n      >\n        ‚Üê Back\n      </button>\n\n      <h2 className=\"admin-title\">Scan QR Code to Check In</h2>\n\n      {error && <div className=\"error\" style={{ marginBottom: '1rem' }}>{error}</div>}\n\n      <div className=\"qr-container\" style={{ maxWidth: 400, margin: '0 auto' }}>\n        <QrReader\n          constraints={{ video: { facingMode: 'environment' } }}\n          onResult={(res, err) => {\n            if (res) handleResult(res);\n            if (err) handleError(err);\n          }}\n          style={{ width: '100%' }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ScanQRCode;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}