{"ast":null,"code":"var _jsxFileName = \"/Users/eshaantripathi/Documents/GitHub/STUCO-Attendance/src/AttendanceSession.jsx\",\n  _s = $RefreshSig$();\n// src/AttendanceSession.jsx\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { doc, getDoc, updateDoc, collection, getDocs, writeBatch } from 'firebase/firestore';\nimport { QRCodeCanvas as QRCode } from 'qrcode.react';\nimport { db } from './firebase';\nimport './AdminInterface.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AttendanceSession = () => {\n  _s();\n  const {\n    sessionId\n  } = useParams();\n  const navigate = useNavigate();\n  const [session, setSession] = useState(null);\n\n  // load the session document\n  useEffect(() => {\n    const loadSession = async () => {\n      const snap = await getDoc(doc(db, 'attendanceSessions', sessionId));\n      if (snap.exists()) {\n        setSession({\n          id: snap.id,\n          ...snap.data()\n        });\n      } else {\n        alert('Session not found');\n        navigate('/admin');\n      }\n    };\n    loadSession();\n  }, [sessionId, navigate]);\n\n  // end session: close it, and update every user's absences\n  const endSession = async () => {\n    const batch = writeBatch(db);\n\n    // close the session\n    const sessRef = doc(db, 'attendanceSessions', sessionId);\n    batch.update(sessRef, {\n      open: false\n    });\n\n    // fetch all users\n    const usersSnap = await getDocs(collection(db, 'users'));\n    usersSnap.forEach(userDoc => {\n      var _data$attendance;\n      const data = userDoc.data();\n      const wasPresent = (_data$attendance = data.attendance) === null || _data$attendance === void 0 ? void 0 : _data$attendance.includes(sessionId);\n      const currentAbsences = data.absences || 0;\n      const newAbsences = wasPresent ? currentAbsences : currentAbsences + 1;\n      const userRef = doc(db, 'users', userDoc.id);\n      batch.update(userRef, {\n        absences: newAbsences\n      });\n    });\n\n    // commit batch\n    await batch.commit();\n\n    // update UI\n    setSession(prev => ({\n      ...prev,\n      open: false\n    }));\n  };\n  if (!session) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading\\u2026\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 24\n  }, this);\n\n  // helper to format Firestore Timestamp or raw number\n  const formatDate = ts => ts !== null && ts !== void 0 && ts.toDate ? ts.toDate().toLocaleString() : new Date(ts).toLocaleString();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"admin-btn\",\n      style: {\n        marginBottom: '1rem'\n      },\n      onClick: () => navigate('/admin'),\n      children: \"\\u2190 Back to Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"admin-title\",\n      children: \"Today's Attendance Session\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), session.open ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"qr-container\",\n      children: [/*#__PURE__*/_jsxDEV(QRCode, {\n        value: sessionId,\n        size: 256\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"qr-value\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Session ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), \" \", sessionId, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Started:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), \" \", formatDate(session.createdAt)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"admin-btn\",\n        onClick: endSession,\n        children: \"\\uD83D\\uDED1 End Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      style: {\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '1rem'\n        },\n        children: \"This session has ended.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"admin-btn\",\n        onClick: () => navigate('/admin'),\n        children: \"\\u2190 Back to Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(AttendanceSession, \"5I1yVU+mu1gMpxH8f/SmQFKKRRE=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = AttendanceSession;\nexport default AttendanceSession;\nvar _c;\n$RefreshReg$(_c, \"AttendanceSession\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","doc","getDoc","updateDoc","collection","getDocs","writeBatch","QRCodeCanvas","QRCode","db","jsxDEV","_jsxDEV","AttendanceSession","_s","sessionId","navigate","session","setSession","loadSession","snap","exists","id","data","alert","endSession","batch","sessRef","update","open","usersSnap","forEach","userDoc","_data$attendance","wasPresent","attendance","includes","currentAbsences","absences","newAbsences","userRef","commit","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","formatDate","ts","toDate","toLocaleString","Date","className","style","marginBottom","onClick","value","size","createdAt","flexDirection","_c","$RefreshReg$"],"sources":["/Users/eshaantripathi/Documents/GitHub/STUCO-Attendance/src/AttendanceSession.jsx"],"sourcesContent":["// src/AttendanceSession.jsx\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport {\n  doc,\n  getDoc,\n  updateDoc,\n  collection,\n  getDocs,\n  writeBatch,\n} from 'firebase/firestore';\nimport { QRCodeCanvas as QRCode } from 'qrcode.react';\nimport { db } from './firebase';\nimport './AdminInterface.css';\n\nconst AttendanceSession = () => {\n  const { sessionId } = useParams();\n  const navigate = useNavigate();\n  const [session, setSession] = useState(null);\n\n  // load the session document\n  useEffect(() => {\n    const loadSession = async () => {\n      const snap = await getDoc(doc(db, 'attendanceSessions', sessionId));\n      if (snap.exists()) {\n        setSession({ id: snap.id, ...snap.data() });\n      } else {\n        alert('Session not found');\n        navigate('/admin');\n      }\n    };\n    loadSession();\n  }, [sessionId, navigate]);\n\n  // end session: close it, and update every user's absences\n  const endSession = async () => {\n    const batch = writeBatch(db);\n\n    // close the session\n    const sessRef = doc(db, 'attendanceSessions', sessionId);\n    batch.update(sessRef, { open: false });\n\n    // fetch all users\n    const usersSnap = await getDocs(collection(db, 'users'));\n    usersSnap.forEach(userDoc => {\n      const data = userDoc.data();\n      const wasPresent = data.attendance?.includes(sessionId);\n      const currentAbsences = data.absences || 0;\n      const newAbsences = wasPresent ? currentAbsences : currentAbsences + 1;\n\n      const userRef = doc(db, 'users', userDoc.id);\n      batch.update(userRef, { absences: newAbsences });\n    });\n\n    // commit batch\n    await batch.commit();\n\n    // update UI\n    setSession(prev => ({ ...prev, open: false }));\n  };\n\n  if (!session) return <div>Loading‚Ä¶</div>;\n\n  // helper to format Firestore Timestamp or raw number\n  const formatDate = ts =>\n    ts?.toDate\n      ? ts.toDate().toLocaleString()\n      : new Date(ts).toLocaleString();\n\n  return (\n    <div className=\"admin-container\">\n      <button\n        className=\"admin-btn\"\n        style={{ marginBottom: '1rem' }}\n        onClick={() => navigate('/admin')}\n      >\n        ‚Üê Back to Dashboard\n      </button>\n\n      <h2 className=\"admin-title\">Today's Attendance Session</h2>\n\n      {session.open ? (\n        <div className=\"qr-container\">\n          <QRCode value={sessionId} size={256} />\n          <div className=\"qr-value\">\n            <strong>Session ID:</strong> {sessionId}\n            <br />\n            <strong>Started:</strong> {formatDate(session.createdAt)}\n          </div>\n          <button className=\"admin-btn\" onClick={endSession}>\n            üõë End Session\n          </button>\n        </div>\n      ) : (\n        <div className=\"input-group\" style={{ flexDirection: 'column' }}>\n          <div style={{ marginBottom: '1rem' }}>\n            This session has ended.\n          </div>\n          <button\n            className=\"admin-btn\"\n            onClick={() => navigate('/admin')}\n          >\n            ‚Üê Back to Dashboard\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AttendanceSession;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}