{"ast":null,"code":"var _jsxFileName = \"/Users/eshaantripathi/Documents/GitHub/STUCO-Attendance/src/ScanQRCode.jsx\",\n  _s = $RefreshSig$();\n// src/ScanQRCode.jsx\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport QrReader from 'modern-react-qr-reader';\nimport { auth, db } from './firebase';\nimport { doc, getDoc, updateDoc } from 'firebase/firestore';\nimport './AdminInterface.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScanQRCode = () => {\n  _s();\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  // Redirect to login if not signed in\n  useEffect(() => {\n    if (!auth.currentUser) {\n      navigate('/');\n    }\n  }, [navigate]);\n\n  // Called on every scan (data is string or null)\n  const handleScan = async data => {\n    if (!data) return;\n    const sessionId = data;\n\n    // fetch session and ensure it's open\n    const sessRef = doc(db, 'attendanceSessions', sessionId);\n    const sessSnap = await getDoc(sessRef);\n    if (!sessSnap.exists() || !sessSnap.data().open) {\n      setError('No active session with that code.');\n      return;\n    }\n\n    // mark user present\n    const email = auth.currentUser.email;\n    const username = email.split('@')[0];\n    const userRef = doc(db, 'users', username);\n    const userSnap = await getDoc(userRef);\n    const prevAttendance = userSnap.data().attendance || [];\n    await updateDoc(userRef, {\n      attendance: Array.from(new Set([...prevAttendance, sessionId]))\n    });\n    navigate('/dashboard');\n  };\n  const handleError = err => {\n    console.error(err);\n    setError('Camera error: ' + err.message);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"admin-btn\",\n      style: {\n        marginBottom: '1rem'\n      },\n      onClick: () => navigate(-1),\n      children: \"\\u2190 Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"admin-title\",\n      children: \"Scan QR Code to Check In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"qr-container\",\n      children: /*#__PURE__*/_jsxDEV(QrReader, {\n        delay: 300,\n        facingMode: \"environment\",\n        onError: handleError,\n        onScan: handleScan,\n        style: {\n          width: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(ScanQRCode, \"vfTDrq04+XWAcK/v1uBZBP2N3Is=\", false, function () {\n  return [useNavigate];\n});\n_c = ScanQRCode;\nexport default ScanQRCode;\nvar _c;\n$RefreshReg$(_c, \"ScanQRCode\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","QrReader","auth","db","doc","getDoc","updateDoc","jsxDEV","_jsxDEV","ScanQRCode","_s","error","setError","navigate","currentUser","handleScan","data","sessionId","sessRef","sessSnap","exists","open","email","username","split","userRef","userSnap","prevAttendance","attendance","Array","from","Set","handleError","err","console","message","className","children","style","marginBottom","onClick","fileName","_jsxFileName","lineNumber","columnNumber","delay","facingMode","onError","onScan","width","_c","$RefreshReg$"],"sources":["/Users/eshaantripathi/Documents/GitHub/STUCO-Attendance/src/ScanQRCode.jsx"],"sourcesContent":["// src/ScanQRCode.jsx\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport QrReader from 'modern-react-qr-reader';\nimport { auth, db } from './firebase';\nimport { doc, getDoc, updateDoc } from 'firebase/firestore';\nimport './AdminInterface.css';\n\nconst ScanQRCode = () => {\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  // Redirect to login if not signed in\n  useEffect(() => {\n    if (!auth.currentUser) {\n      navigate('/');\n    }\n  }, [navigate]);\n\n  // Called on every scan (data is string or null)\n  const handleScan = async (data) => {\n    if (!data) return;\n    const sessionId = data;\n\n    // fetch session and ensure it's open\n    const sessRef = doc(db, 'attendanceSessions', sessionId);\n    const sessSnap = await getDoc(sessRef);\n    if (!sessSnap.exists() || !sessSnap.data().open) {\n      setError('No active session with that code.');\n      return;\n    }\n\n    // mark user present\n    const email = auth.currentUser.email;\n    const username = email.split('@')[0];\n    const userRef = doc(db, 'users', username);\n    const userSnap = await getDoc(userRef);\n    const prevAttendance = userSnap.data().attendance || [];\n\n    await updateDoc(userRef, {\n      attendance: Array.from(new Set([...prevAttendance, sessionId]))\n    });\n\n    navigate('/dashboard');\n  };\n\n  const handleError = (err) => {\n    console.error(err);\n    setError('Camera error: ' + err.message);\n  };\n\n  return (\n    <div className=\"admin-container\">\n      <button\n        className=\"admin-btn\"\n        style={{ marginBottom: '1rem' }}\n        onClick={() => navigate(-1)}\n      >\n        ‚Üê Back\n      </button>\n\n      <h2 className=\"admin-title\">Scan QR Code to Check In</h2>\n\n      <div className=\"qr-container\">\n        <QrReader\n          delay={300}\n          facingMode=\"environment\"\n          onError={handleError}\n          onScan={handleScan}\n          style={{ width: '100%' }}\n        />\n      </div>\n\n      {error && <div className=\"error\">{error}</div>}\n    </div>\n  );\n};\n\nexport default ScanQRCode;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}