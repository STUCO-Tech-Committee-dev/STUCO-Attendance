{"ast":null,"code":"var _jsxFileName = \"/Users/eshaantripathi/Documents/GitHub/STUCO-Attendance/src/AdminDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { db } from './firebase';\nimport { collection, getDocs, addDoc, serverTimestamp, query, where } from 'firebase/firestore';\nimport './AdminInterface.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const [openSession, setOpenSession] = useState(null);\n  useEffect(() => {\n    const loadOpenSession = async () => {\n      // look for any session with open === true\n      const q = query(collection(db, 'attendanceSessions'), where('open', '==', true));\n      const snap = await getDocs(q);\n      if (!snap.empty) {\n        const docSnap = snap.docs[0];\n        setOpenSession({\n          id: docSnap.id,\n          ...docSnap.data()\n        });\n      }\n    };\n    loadOpenSession();\n  }, []);\n  const startSession = async () => {\n    // create a new session\n    const ref = await addDoc(collection(db, 'attendanceSessions'), {\n      createdAt: serverTimestamp(),\n      open: true\n    });\n    // immediately navigate to the QR page\n    navigate(`/attendance/session/${ref.id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"admin-title\",\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      style: {\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"admin-btn\",\n        onClick: startSession,\n        disabled: !!openSession,\n        children: openSession ? 'Session In Progress' : '‚ñ∂Ô∏è Start New Session'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      style: {\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"admin-btn\",\n        onClick: () => navigate('/attendance/chart'),\n        children: \"\\uD83D\\uDCCA View Total Attendance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"D2JJhs9B6flm46FIaeqaRbfXpDU=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","db","collection","getDocs","addDoc","serverTimestamp","query","where","jsxDEV","_jsxDEV","AdminDashboard","_s","navigate","openSession","setOpenSession","loadOpenSession","q","snap","empty","docSnap","docs","id","data","startSession","ref","createdAt","open","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","justifyContent","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/eshaantripathi/Documents/GitHub/STUCO-Attendance/src/AdminDashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { db } from './firebase';\nimport {\n  collection,\n  getDocs,\n  addDoc,\n  serverTimestamp,\n  query,\n  where\n} from 'firebase/firestore';\nimport './AdminInterface.css';\n\nconst AdminDashboard = () => {\n  const navigate = useNavigate();\n  const [openSession, setOpenSession] = useState(null);\n\n  useEffect(() => {\n    const loadOpenSession = async () => {\n      // look for any session with open === true\n      const q = query(\n        collection(db, 'attendanceSessions'),\n        where('open', '==', true)\n      );\n      const snap = await getDocs(q);\n      if (!snap.empty) {\n        const docSnap = snap.docs[0];\n        setOpenSession({ id: docSnap.id, ...docSnap.data() });\n      }\n    };\n    loadOpenSession();\n  }, []);\n\n  const startSession = async () => {\n    // create a new session\n    const ref = await addDoc(collection(db, 'attendanceSessions'), {\n      createdAt: serverTimestamp(),\n      open: true\n    });\n    // immediately navigate to the QR page\n    navigate(`/attendance/session/${ref.id}`);\n  };\n\n  return (\n    <div className=\"admin-container\">\n      <h2 className=\"admin-title\">Admin Dashboard</h2>\n\n      <div className=\"input-group\" style={{ justifyContent: 'center' }}>\n        <button\n          className=\"admin-btn\"\n          onClick={startSession}\n          disabled={!!openSession}\n        >\n          {openSession ? 'Session In Progress' : '‚ñ∂Ô∏è Start New Session'}\n        </button>\n      </div>\n\n      <div className=\"input-group\" style={{ justifyContent: 'center' }}>\n        <button\n          className=\"admin-btn\"\n          onClick={() => navigate('/attendance/chart')}\n        >\n          üìä View Total Attendance\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}