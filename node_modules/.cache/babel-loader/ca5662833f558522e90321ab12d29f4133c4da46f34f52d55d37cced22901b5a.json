{"ast":null,"code":"var _jsxFileName = \"/Users/eshaantripathi/Documents/GitHub/STUCO-Attendance/src/ScanQRCode.jsx\",\n  _s = $RefreshSig$();\n// src/ScanQRCode.jsx\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport QrReader from 'modern-react-qr-reader';\nimport { auth, db } from './firebase';\nimport { doc, getDoc, updateDoc } from 'firebase/firestore';\nimport './AdminInterface.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScanQRCode = () => {\n  _s();\n  const [error, setError] = useState('');\n  const [permissionGranted, setPermissionGranted] = useState(false);\n  const navigate = useNavigate();\n\n  // 1️⃣ Redirect back to login if not signed in\n  useEffect(() => {\n    if (!auth.currentUser) {\n      navigate('/');\n    }\n  }, [navigate]);\n\n  // 2️⃣ Ask for camera permission on mount\n  useEffect(() => {\n    (async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: {\n            facingMode: 'environment'\n          }\n        });\n        // immediately stop the tracks; QrReader will reopen them\n        stream.getTracks().forEach(track => track.stop());\n        setPermissionGranted(true);\n      } catch (err) {\n        console.error('Camera permission denied', err);\n        setError('Camera access is required to scan QR codes.');\n      }\n    })();\n  }, []);\n  const handleResult = async (result, err) => {\n    if (result) {\n      const sessionId = typeof result === 'string' ? result : result.text;\n      const sessSnap = await getDoc(doc(db, 'attendanceSessions', sessionId));\n      if (!sessSnap.exists() || !sessSnap.data().open) {\n        setError('No active session with that code.');\n        return;\n      }\n\n      // mark present\n      const email = auth.currentUser.email;\n      const username = email.split('@')[0];\n      const userRef = doc(db, 'users', username);\n      const userSnap = await getDoc(userRef);\n      const existing = userSnap.exists() ? userSnap.data().attendance || [] : [];\n      if (!existing.includes(sessionId)) {\n        await updateDoc(userRef, {\n          attendance: [...existing, sessionId]\n        });\n      }\n      navigate('/dashboard');\n    }\n    if (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"admin-btn\",\n      style: {\n        marginBottom: '1rem'\n      },\n      onClick: () => navigate(-1),\n      children: \"\\u2190 Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"admin-title\",\n      children: \"Scan QR Code to Check In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      style: {\n        marginBottom: '1rem'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this), permissionGranted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"qr-container\",\n      style: {\n        maxWidth: 400,\n        margin: '0 auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(QrReader, {\n        constraints: {\n          video: {\n            facingMode: 'environment'\n          }\n        },\n        onResult: handleResult,\n        containerStyle: {\n          width: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Requesting camera access\\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(ScanQRCode, \"PMfE3nUvNtsGQoek3Fya5/GlKtU=\", false, function () {\n  return [useNavigate];\n});\n_c = ScanQRCode;\nexport default ScanQRCode;\nvar _c;\n$RefreshReg$(_c, \"ScanQRCode\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","QrReader","auth","db","doc","getDoc","updateDoc","jsxDEV","_jsxDEV","ScanQRCode","_s","error","setError","permissionGranted","setPermissionGranted","navigate","currentUser","stream","navigator","mediaDevices","getUserMedia","video","facingMode","getTracks","forEach","track","stop","err","console","handleResult","result","sessionId","text","sessSnap","exists","data","open","email","username","split","userRef","userSnap","existing","attendance","includes","className","children","style","marginBottom","onClick","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","margin","constraints","onResult","containerStyle","width","_c","$RefreshReg$"],"sources":["/Users/eshaantripathi/Documents/GitHub/STUCO-Attendance/src/ScanQRCode.jsx"],"sourcesContent":["// src/ScanQRCode.jsx\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport QrReader from 'modern-react-qr-reader';\nimport { auth, db } from './firebase';\nimport { doc, getDoc, updateDoc } from 'firebase/firestore';\nimport './AdminInterface.css';\n\nconst ScanQRCode = () => {\n  const [error, setError] = useState('');\n  const [permissionGranted, setPermissionGranted] = useState(false);\n  const navigate = useNavigate();\n\n  // 1️⃣ Redirect back to login if not signed in\n  useEffect(() => {\n    if (!auth.currentUser) {\n      navigate('/');\n    }\n  }, [navigate]);\n\n  // 2️⃣ Ask for camera permission on mount\n  useEffect(() => {\n    (async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({ video: { facingMode: 'environment' } });\n        // immediately stop the tracks; QrReader will reopen them\n        stream.getTracks().forEach(track => track.stop());\n        setPermissionGranted(true);\n      } catch (err) {\n        console.error('Camera permission denied', err);\n        setError('Camera access is required to scan QR codes.');\n      }\n    })();\n  }, []);\n\n  const handleResult = async (result, err) => {\n    if (result) {\n      const sessionId = typeof result === 'string' ? result : result.text;\n      const sessSnap = await getDoc(doc(db, 'attendanceSessions', sessionId));\n\n      if (!sessSnap.exists() || !sessSnap.data().open) {\n        setError('No active session with that code.');\n        return;\n      }\n\n      // mark present\n      const email = auth.currentUser.email;\n      const username = email.split('@')[0];\n      const userRef = doc(db, 'users', username);\n      const userSnap = await getDoc(userRef);\n      const existing = userSnap.exists() ? (userSnap.data().attendance || []) : [];\n\n      if (!existing.includes(sessionId)) {\n        await updateDoc(userRef, {\n          attendance: [...existing, sessionId]\n        });\n      }\n\n      navigate('/dashboard');\n    }\n    if (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div className=\"admin-container\">\n      <button\n        className=\"admin-btn\"\n        style={{ marginBottom: '1rem' }}\n        onClick={() => navigate(-1)}\n      >\n        ← Back\n      </button>\n\n      <h2 className=\"admin-title\">Scan QR Code to Check In</h2>\n\n      {error && <div className=\"error\" style={{ marginBottom: '1rem' }}>{error}</div>}\n\n      {permissionGranted ? (\n        <div className=\"qr-container\" style={{ maxWidth: 400, margin: '0 auto' }}>\n          <QrReader\n            constraints={{ video: { facingMode: 'environment' } }}\n            onResult={handleResult}\n            containerStyle={{ width: '100%' }}\n          />\n        </div>\n      ) : (\n        <p>Requesting camera access…</p>\n      )}\n    </div>\n  );\n};\n\nexport default ScanQRCode;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,IAAI,EAAEC,EAAE,QAAQ,YAAY;AACrC,SAASC,GAAG,EAAEC,MAAM,EAAEC,SAAS,QAAQ,oBAAoB;AAC3D,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAMiB,QAAQ,GAAGf,WAAW,CAAC,CAAC;;EAE9B;EACAD,SAAS,CAAC,MAAM;IACd,IAAI,CAACG,IAAI,CAACc,WAAW,EAAE;MACrBD,QAAQ,CAAC,GAAG,CAAC;IACf;EACF,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;;EAEd;EACAhB,SAAS,CAAC,MAAM;IACd,CAAC,YAAY;MACX,IAAI;QACF,MAAMkB,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;UAAEC,KAAK,EAAE;YAAEC,UAAU,EAAE;UAAc;QAAE,CAAC,CAAC;QAClG;QACAL,MAAM,CAACM,SAAS,CAAC,CAAC,CAACC,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;QACjDZ,oBAAoB,CAAC,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOa,GAAG,EAAE;QACZC,OAAO,CAACjB,KAAK,CAAC,0BAA0B,EAAEgB,GAAG,CAAC;QAC9Cf,QAAQ,CAAC,6CAA6C,CAAC;MACzD;IACF,CAAC,EAAE,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMiB,YAAY,GAAG,MAAAA,CAAOC,MAAM,EAAEH,GAAG,KAAK;IAC1C,IAAIG,MAAM,EAAE;MACV,MAAMC,SAAS,GAAG,OAAOD,MAAM,KAAK,QAAQ,GAAGA,MAAM,GAAGA,MAAM,CAACE,IAAI;MACnE,MAAMC,QAAQ,GAAG,MAAM5B,MAAM,CAACD,GAAG,CAACD,EAAE,EAAE,oBAAoB,EAAE4B,SAAS,CAAC,CAAC;MAEvE,IAAI,CAACE,QAAQ,CAACC,MAAM,CAAC,CAAC,IAAI,CAACD,QAAQ,CAACE,IAAI,CAAC,CAAC,CAACC,IAAI,EAAE;QAC/CxB,QAAQ,CAAC,mCAAmC,CAAC;QAC7C;MACF;;MAEA;MACA,MAAMyB,KAAK,GAAGnC,IAAI,CAACc,WAAW,CAACqB,KAAK;MACpC,MAAMC,QAAQ,GAAGD,KAAK,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACpC,MAAMC,OAAO,GAAGpC,GAAG,CAACD,EAAE,EAAE,OAAO,EAAEmC,QAAQ,CAAC;MAC1C,MAAMG,QAAQ,GAAG,MAAMpC,MAAM,CAACmC,OAAO,CAAC;MACtC,MAAME,QAAQ,GAAGD,QAAQ,CAACP,MAAM,CAAC,CAAC,GAAIO,QAAQ,CAACN,IAAI,CAAC,CAAC,CAACQ,UAAU,IAAI,EAAE,GAAI,EAAE;MAE5E,IAAI,CAACD,QAAQ,CAACE,QAAQ,CAACb,SAAS,CAAC,EAAE;QACjC,MAAMzB,SAAS,CAACkC,OAAO,EAAE;UACvBG,UAAU,EAAE,CAAC,GAAGD,QAAQ,EAAEX,SAAS;QACrC,CAAC,CAAC;MACJ;MAEAhB,QAAQ,CAAC,YAAY,CAAC;IACxB;IACA,IAAIY,GAAG,EAAE;MACPC,OAAO,CAACjB,KAAK,CAACgB,GAAG,CAAC;IACpB;EACF,CAAC;EAED,oBACEnB,OAAA;IAAKqC,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BtC,OAAA;MACEqC,SAAS,EAAC,WAAW;MACrBE,KAAK,EAAE;QAAEC,YAAY,EAAE;MAAO,CAAE;MAChCC,OAAO,EAAEA,CAAA,KAAMlC,QAAQ,CAAC,CAAC,CAAC,CAAE;MAAA+B,QAAA,EAC7B;IAED;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAET7C,OAAA;MAAIqC,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAAwB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAExD1C,KAAK,iBAAIH,OAAA;MAAKqC,SAAS,EAAC,OAAO;MAACE,KAAK,EAAE;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAAF,QAAA,EAAEnC;IAAK;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAE9ExC,iBAAiB,gBAChBL,OAAA;MAAKqC,SAAS,EAAC,cAAc;MAACE,KAAK,EAAE;QAAEO,QAAQ,EAAE,GAAG;QAAEC,MAAM,EAAE;MAAS,CAAE;MAAAT,QAAA,eACvEtC,OAAA,CAACP,QAAQ;QACPuD,WAAW,EAAE;UAAEnC,KAAK,EAAE;YAAEC,UAAU,EAAE;UAAc;QAAE,CAAE;QACtDmC,QAAQ,EAAE5B,YAAa;QACvB6B,cAAc,EAAE;UAAEC,KAAK,EAAE;QAAO;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,gBAEN7C,OAAA;MAAAsC,QAAA,EAAG;IAAyB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAChC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC3C,EAAA,CApFID,UAAU;EAAA,QAGGT,WAAW;AAAA;AAAA4D,EAAA,GAHxBnD,UAAU;AAsFhB,eAAeA,UAAU;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}