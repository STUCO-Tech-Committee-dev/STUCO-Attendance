{"ast":null,"code":"var _jsxFileName = \"/Users/eshaantripathi/Documents/GitHub/STUCO-Attendance/src/ScanQRCode.jsx\",\n  _s = $RefreshSig$();\n// src/ScanQRCode.jsx\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { QrReader } from 'react-qr-reader';\nimport { auth, db } from './firebase';\nimport { doc, getDoc, updateDoc } from 'firebase/firestore';\nimport './AdminInterface.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScanQRCode = () => {\n  _s();\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  // Redirect to login if not signed in\n  useEffect(() => {\n    if (!auth.currentUser) {\n      navigate('/');\n    }\n  }, [navigate]);\n  const handleResult = async (result, err) => {\n    if (result) {\n      var _result$text;\n      const sessionId = (_result$text = result === null || result === void 0 ? void 0 : result.text) !== null && _result$text !== void 0 ? _result$text : result;\n      // fetch session and ensure it's open\n      const sessSnap = await getDoc(doc(db, 'attendanceSessions', sessionId));\n      if (!sessSnap.exists() || !sessSnap.data().open) {\n        setError('No active session with that code.');\n        return;\n      }\n\n      // mark user present\n      const email = auth.currentUser.email;\n      const username = email.split('@')[0];\n      const userRef = doc(db, 'users', username);\n      const userSnap = await getDoc(userRef);\n      const existing = userSnap.exists() ? userSnap.data().attendance || [] : [];\n      if (!existing.includes(sessionId)) {\n        await updateDoc(userRef, {\n          attendance: [...existing, sessionId]\n        });\n      }\n      navigate('/dashboard');\n    }\n    if (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"admin-btn\",\n      style: {\n        marginBottom: '1rem'\n      },\n      onClick: () => navigate(-1),\n      children: \"\\u2190 Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"admin-title\",\n      children: \"Scan QR Code to Check In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"qr-container\",\n      style: {\n        width: '100%',\n        maxWidth: 400,\n        margin: '0 auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(QrReader\n      // the key change: use `videoConstraints`, not `constraints`\n      , {\n        videoConstraints: {\n          facingMode: 'environment'\n        },\n        scanDelay: 500,\n        onResult: handleResult,\n        style: {\n          width: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      style: {\n        marginTop: '1rem'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(ScanQRCode, \"vfTDrq04+XWAcK/v1uBZBP2N3Is=\", false, function () {\n  return [useNavigate];\n});\n_c = ScanQRCode;\nexport default ScanQRCode;\nvar _c;\n$RefreshReg$(_c, \"ScanQRCode\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","QrReader","auth","db","doc","getDoc","updateDoc","jsxDEV","_jsxDEV","ScanQRCode","_s","error","setError","navigate","currentUser","handleResult","result","err","_result$text","sessionId","text","sessSnap","exists","data","open","email","username","split","userRef","userSnap","existing","attendance","includes","console","className","children","style","marginBottom","onClick","fileName","_jsxFileName","lineNumber","columnNumber","width","maxWidth","margin","videoConstraints","facingMode","scanDelay","onResult","marginTop","_c","$RefreshReg$"],"sources":["/Users/eshaantripathi/Documents/GitHub/STUCO-Attendance/src/ScanQRCode.jsx"],"sourcesContent":["// src/ScanQRCode.jsx\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { QrReader } from 'react-qr-reader';\nimport { auth, db } from './firebase';\nimport { doc, getDoc, updateDoc } from 'firebase/firestore';\nimport './AdminInterface.css';\n\nconst ScanQRCode = () => {\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  // Redirect to login if not signed in\n  useEffect(() => {\n    if (!auth.currentUser) {\n      navigate('/');\n    }\n  }, [navigate]);\n\n  const handleResult = async (result, err) => {\n    if (result) {\n      const sessionId = result?.text ?? result;\n      // fetch session and ensure it's open\n      const sessSnap = await getDoc(doc(db, 'attendanceSessions', sessionId));\n      if (!sessSnap.exists() || !sessSnap.data().open) {\n        setError('No active session with that code.');\n        return;\n      }\n\n      // mark user present\n      const email = auth.currentUser.email;\n      const username = email.split('@')[0];\n      const userRef = doc(db, 'users', username);\n\n      const userSnap = await getDoc(userRef);\n      const existing = userSnap.exists() ? userSnap.data().attendance || [] : [];\n      if (!existing.includes(sessionId)) {\n        await updateDoc(userRef, {\n          attendance: [...existing, sessionId]\n        });\n      }\n\n      navigate('/dashboard');\n    }\n\n    if (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div className=\"admin-container\">\n      <button\n        className=\"admin-btn\"\n        style={{ marginBottom: '1rem' }}\n        onClick={() => navigate(-1)}\n      >\n        ‚Üê Back\n      </button>\n\n      <h2 className=\"admin-title\">Scan QR Code to Check In</h2>\n\n      <div className=\"qr-container\" style={{ width: '100%', maxWidth: 400, margin: '0 auto' }}>\n        <QrReader\n          // the key change: use `videoConstraints`, not `constraints`\n          videoConstraints={{ facingMode: 'environment' }}\n          scanDelay={500}\n          onResult={handleResult}\n          style={{ width: '100%' }}\n        />\n      </div>\n\n      {error && <div className=\"error\" style={{ marginTop: '1rem' }}>{error}</div>}\n    </div>\n  );\n};\n\nexport default ScanQRCode;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}