{"ast":null,"code":"var _jsxFileName = \"/Users/eshaantripathi/Documents/GitHub/STUCO-Attendance/src/AttendanceChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { db } from './firebase';\nimport { collection, getDocs } from 'firebase/firestore';\nimport './AttendanceChart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AttendanceChart = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [sessions, setSessions] = useState([]);\n  useEffect(() => {\n    const fetchAll = async () => {\n      // 1️⃣ Fetch sessions\n      const sessSnap = await getDocs(collection(db, 'attendanceSessions'));\n      const sessData = sessSnap.docs.map(d => ({\n        id: d.id,\n        ...d.data()\n      })).sort((a, b) => a.date > b.date ? 1 : -1); // assume each has a date field\n      setSessions(sessData);\n\n      // 2️⃣ Fetch users\n      const userSnap = await getDocs(collection(db, 'users'));\n      const userData = userSnap.docs.map(d => ({\n        id: d.id,\n        ...d.data()\n      }));\n      setUsers(userData);\n    };\n    fetchAll();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"attendance-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"attendance-title\",\n      children: \"Attendance Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"attendance-table-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"attendance-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this), sessions.map(sess => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: new Date(sess.date).toLocaleDateString()\n            }, sess.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"name-cell\",\n              children: user.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this), sessions.map(sess => {\n              var _user$attendance;\n              const present = (_user$attendance = user.attendance) === null || _user$attendance === void 0 ? void 0 : _user$attendance.includes(sess.id);\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                className: present ? 'present' : 'absent',\n                children: present ? 'Present' : 'Absent'\n              }, sess.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 21\n              }, this);\n            })]\n          }, user.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(AttendanceChart, \"FsKw5lVWgLM0llsoUxAReultSt0=\");\n_c = AttendanceChart;\nexport default AttendanceChart;\nvar _c;\n$RefreshReg$(_c, \"AttendanceChart\");","map":{"version":3,"names":["React","useEffect","useState","db","collection","getDocs","jsxDEV","_jsxDEV","AttendanceChart","_s","users","setUsers","sessions","setSessions","fetchAll","sessSnap","sessData","docs","map","d","id","data","sort","a","b","date","userSnap","userData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","sess","Date","toLocaleDateString","user","_user$attendance","present","attendance","includes","_c","$RefreshReg$"],"sources":["/Users/eshaantripathi/Documents/GitHub/STUCO-Attendance/src/AttendanceChart.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { db } from './firebase';\nimport { collection, getDocs } from 'firebase/firestore';\nimport './AttendanceChart.css';\n\nconst AttendanceChart = () => {\n  const [users, setUsers] = useState([]);\n  const [sessions, setSessions] = useState([]);\n\n  useEffect(() => {\n    const fetchAll = async () => {\n      // 1️⃣ Fetch sessions\n      const sessSnap = await getDocs(collection(db, 'attendanceSessions'));\n      const sessData = sessSnap.docs\n        .map(d => ({ id: d.id, ...d.data() }))\n        .sort((a, b) => (a.date > b.date ? 1 : -1)); // assume each has a date field\n      setSessions(sessData);\n\n      // 2️⃣ Fetch users\n      const userSnap = await getDocs(collection(db, 'users'));\n      const userData = userSnap.docs.map(d => ({ id: d.id, ...d.data() }));\n      setUsers(userData);\n    };\n\n    fetchAll();\n  }, []);\n\n  return (\n    <div className=\"attendance-container\">\n      <h2 className=\"attendance-title\">Attendance Chart</h2>\n      <div className=\"attendance-table-wrapper\">\n        <table className=\"attendance-table\">\n          <thead>\n            <tr>\n              <th>Name</th>\n              {sessions.map(sess => (\n                <th key={sess.id}>\n                  {new Date(sess.date).toLocaleDateString()}\n                </th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {users.map(user => (\n              <tr key={user.id}>\n                <td className=\"name-cell\">{user.id}</td>\n                {sessions.map(sess => {\n                  const present = user.attendance?.includes(sess.id);\n                  return (\n                    <td\n                      key={sess.id}\n                      className={present ? 'present' : 'absent'}\n                    >\n                      {present ? 'Present' : 'Absent'}\n                    </td>\n                  );\n                })}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default AttendanceChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}