{"ast":null,"code":"var _jsxFileName = \"/Users/eshaantripathi/Documents/GitHub/STUCO-Attendance/src/Dashboard.js\",\n  _s = $RefreshSig$();\n// src/Dashboard.jsx\nimport React, { useEffect, useState } from 'react';\nimport { db, auth } from './firebase';\nimport { doc, getDoc } from 'firebase/firestore';\nimport { useNavigate } from 'react-router-dom';\nimport './AdminInterface.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [attendanceDates, setAttendanceDates] = useState([]);\n  const [absences, setAbsences] = useState(0);\n  const [username, setUsername] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchData = async () => {\n      var _userData$absences;\n      // redirect if not logged in\n      if (!auth.currentUser) {\n        navigate('/');\n        return;\n      }\n      const email = auth.currentUser.email;\n      const uname = email.split('@')[0];\n      setUsername(uname);\n\n      // get the user doc\n      const userRef = doc(db, 'users', uname);\n      const userSnap = await getDoc(userRef);\n      if (!userSnap.exists()) {\n        // no user record → treat as zero\n        setAbsences(0);\n        setAttendanceDates([]);\n        return;\n      }\n      const userData = userSnap.data();\n      setAbsences((_userData$absences = userData.absences) !== null && _userData$absences !== void 0 ? _userData$absences : 0);\n      const sessionIds = userData.attendance || [];\n\n      // fetch each session to get its date\n      const dates = await Promise.all(sessionIds.map(async sessionId => {\n        var _sessData$date;\n        const sessRef = doc(db, 'attendanceSessions', sessionId);\n        const sessSnap = await getDoc(sessRef);\n        if (!sessSnap.exists()) return null;\n        const sessData = sessSnap.data();\n        // session.date if you used serverTimestamp(), otherwise fall back to createdAt\n        const raw = (_sessData$date = sessData.date) !== null && _sessData$date !== void 0 ? _sessData$date : sessData.createdAt;\n        const dateObj = typeof (raw === null || raw === void 0 ? void 0 : raw.toDate) === 'function' ? raw.toDate() : new Date(raw);\n        return dateObj;\n      }));\n\n      // filter out any nulls and sort chronologically\n      setAttendanceDates(dates.filter(d => d instanceof Date && !isNaN(d)).sort((a, b) => a - b));\n    };\n    fetchData();\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"admin-title\",\n      children: [\"Welcome, \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Absences: \", absences]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Attendance Record:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), attendanceDates.length ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"attendance-list\",\n      children: attendanceDates.map((date, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: date.toLocaleDateString()\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No attendance records yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"admin-btn\",\n      onClick: () => navigate('/qr'),\n      children: \"Scan QR to Check In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"ped40mUM3AzmkMLqBxs1+90BJHk=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","db","auth","doc","getDoc","useNavigate","jsxDEV","_jsxDEV","Dashboard","_s","attendanceDates","setAttendanceDates","absences","setAbsences","username","setUsername","navigate","fetchData","_userData$absences","currentUser","email","uname","split","userRef","userSnap","exists","userData","data","sessionIds","attendance","dates","Promise","all","map","sessionId","_sessData$date","sessRef","sessSnap","sessData","raw","date","createdAt","dateObj","toDate","Date","filter","d","isNaN","sort","a","b","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","idx","toLocaleDateString","onClick","_c","$RefreshReg$"],"sources":["/Users/eshaantripathi/Documents/GitHub/STUCO-Attendance/src/Dashboard.js"],"sourcesContent":["// src/Dashboard.jsx\nimport React, { useEffect, useState } from 'react';\nimport { db, auth } from './firebase';\nimport { doc, getDoc } from 'firebase/firestore';\nimport { useNavigate } from 'react-router-dom';\nimport './AdminInterface.css';\n\nconst Dashboard = () => {\n  const [attendanceDates, setAttendanceDates] = useState([]);\n  const [absences, setAbsences] = useState(0);\n  const [username, setUsername] = useState('');\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      // redirect if not logged in\n      if (!auth.currentUser) {\n        navigate('/');\n        return;\n      }\n\n      const email = auth.currentUser.email;\n      const uname = email.split('@')[0];\n      setUsername(uname);\n\n      // get the user doc\n      const userRef = doc(db, 'users', uname);\n      const userSnap = await getDoc(userRef);\n\n      if (!userSnap.exists()) {\n        // no user record → treat as zero\n        setAbsences(0);\n        setAttendanceDates([]);\n        return;\n      }\n\n      const userData = userSnap.data();\n      setAbsences(userData.absences ?? 0);\n      const sessionIds = userData.attendance || [];\n\n      // fetch each session to get its date\n      const dates = await Promise.all(\n        sessionIds.map(async sessionId => {\n          const sessRef = doc(db, 'attendanceSessions', sessionId);\n          const sessSnap = await getDoc(sessRef);\n          if (!sessSnap.exists()) return null;\n\n          const sessData = sessSnap.data();\n          // session.date if you used serverTimestamp(), otherwise fall back to createdAt\n          const raw = sessData.date ?? sessData.createdAt;\n          const dateObj =\n            typeof raw?.toDate === 'function'\n              ? raw.toDate()\n              : new Date(raw);\n          return dateObj;\n        })\n      );\n\n      // filter out any nulls and sort chronologically\n      setAttendanceDates(\n        dates\n          .filter(d => d instanceof Date && !isNaN(d))\n          .sort((a, b) => a - b)\n      );\n    };\n\n    fetchData();\n  }, [navigate]);\n\n  return (\n    <div className=\"admin-container\">\n      <h2 className=\"admin-title\">Welcome, {username}</h2>\n\n      <p>Total Absences: {absences}</p>\n\n      <h3>Attendance Record:</h3>\n      {attendanceDates.length ? (\n        <ul className=\"attendance-list\">\n          {attendanceDates.map((date, idx) => (\n            <li key={idx}>{date.toLocaleDateString()}</li>\n          ))}\n        </ul>\n      ) : (\n        <p>No attendance records yet.</p>\n      )}\n\n      <button\n        className=\"admin-btn\"\n        onClick={() => navigate('/qr')}\n      >\n        Scan QR to Check In\n      </button>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}